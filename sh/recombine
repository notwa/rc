#!/usr/bin/env false
# FAKE_COMPAT

[ -z "${IFS+-}" ] || { echo >&2 this script must be sourced from shrc; exit 1; }
cd -- "${HOME:?}/sh" || exit

case "$0" in
(-*) zero="${0#-}";;
(/*) zero="${0##*/}";;
(*) zero="$0"
esac

[ "$zero" != recombine ] || zero=zsh # only zsh does this (AFAIK)

case "$zero" in
(ash)   SH=ASH  sh=ash;;
(bash)  SH=BASH sh=bash;;
(dash)  SH=DASH sh=dash;;
(hush)  SH=HUSH sh=hush;;
(ksh)   SH=KSH  sh=ksh;;
(loksh) SH=OKSH sh=oksh;; # similar enough to oksh to use the same compatibility flag
(mksh)  SH=MKSH sh=mksh;;
(oksh)  SH=OKSH sh=oksh;;
(osh)   SH=OSH  sh=osh;;
(posh)  SH=POSH sh=posh;;
(yash)  SH=YASH sh=yash;;
(zsh)   SH=ZSH  sh=zsh;;
(sh)
    f() { ! return 1; }
    g() { return 256; }
    if f; then # (ash, hush) || (zsh)
        g && SH=ASH  sh=ash  || SH=ZSH  sh=zsh
    else # (bash, mksh, osh) || (dash, ksh, loksh, oksh, posh, yash)
        g && SH=BASH sh=bash || SH=DASH sh=dash
    fi;;
(*)
    pl >&2 "unknown shell (\$0): $0"
    exit 1
esac

pl '[ -n "$preload" ] || exit 1'
for f in *; do
    [ -n "${f##*.*}" ] && [ -f "$f" ] || continue
    ! [ -x "$f" ]; x=$? i=10 ok=
    while IFS= read -r line; do
        [ "$i" != 10 ] || case "${line%%[!!-~]*}" in (\#!*sh) ! :; esac || x=0
        check=0
        for word in $line; do
            case "$word" in (YES_$SH) ok=1;; (NO_$SH) ok=0;; (compat:) check=1;; esac
            [ "$check" != 1 ] || case "$word" in (+$sh) ok=1;; (-$sh) ok=0;; esac
        done
        [ "$((i-=1))" != 0 ] || break # act like head -n10
    done < "$f"

    if [ "$x" = 1 ] && [ "$ok" = 0 ]; then
        esc "$HOME/sh/$f"
        # ensure $f is a valid function name/identifier in all shells:
        case "${f:-:}" in ([!A-Z_a-z]*) ! :;; (*[!0-9A-Z_a-z]*) ! :;; esac &&
        pl "$f() { '${a:-! :}' \"\$@\"; }"
    fi

    [ "$ok" != 1 ] || set -- "$@" "$f"
done
pl
[ $# = 0 ] || cat "$@"
