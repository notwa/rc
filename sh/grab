#!/usr/bin/env sh
# compat: +ash +bash +dash +hush +ksh +mksh +oksh +osh +posh +yash +zsh
# posh complains about test -ef

__grab() { ### @grab - download a file from my site and verify its integrity by its [minisign](https://github.com/jedisct1/minisign/) signature.
[ -z "${ZSH_VERSION}" ] || emulate sh
#!/usr/bin/env sh
unset CDPATH f fn fx IFS LC_ALL owd pub remote t task x x2 x4 || exit

pub=RWQdYTxDsppw5ZFpYZFoF6IoPS0okMKlOiz9MwTl0NUoP41r57sf9dI1
remote=eaguru.guru/t
export LC_ALL=C

umask 002

will(){
task=$*
}

die(){
x=${?#0}
printf "failed to %s\n" "$task" >&2
exit ${x:-1}
}

esc(){
while [ -n "$1" ]
do case "$1" in
([\!\"$\&-\>@-~]*) printf %.1s "$1";;
(*) printf %%%02X "'$1";;
esac
set -- "${1#?}"
done
} 2>&-

get(){
if [ -f /usr/bin/curl ]
then curl -sSfLgm5 -o "$@"
else wget -qt1 -T5 -O "$@"
fi
}

clean(){
will clean up temporary files
! [ -d "$t" ] || rm -r -- "$t" || die
}

hex(){
if [ -f /usr/bin/xxd ]
then exec xxd -p -l4 -- "$@"
else exec hexdump -ve '1 1 "%02x"' -n4 -- "$@"
fi
}

resolve(){
IFS= read -r d && cd -- "${d:?}" && pwd -P
}

trap clean INT EXIT
owd="${PWD:?unsupported}"

will create temporary directory
t="$(mktemp -d | resolve)" || die

will check directory validity
! {
[ "${t#/}" = "$t" ] || [ "$t" -ef / ] || [ "$t" -ef "$owd" ]
} || die

will change directory
cd -- "$t" || die

for f
do
fn="${f##*/}"
fn="${fn%%\?*}" # for shame, wget
fn="${fn%%#*}"

will ensure filename is valid
case "$fn" in
(.) false;;
(..) false;;
([!\ -~]) false;;
([\":\<\>?\\\|]) false;;
(?*) true;;
(*) false;;
esac && touch -- "$fn" || die

will ensure supported protocols # busybox restricts this
fx="$(esc "$fn")"
case "$f" in
(http://*);;
(https://*);;
(ftp://*);;
(ftps://*);; # buggy
(*:*)
printf 'unsupported protocol: %s\n' "${f%%:*}" >&2
die;;
(*)
f="https://$remote/$fx";;
esac

will download "$fn" from "$f"
get "$fn" -- "$f" || die

will download "$fn.minisig" from "$f.minisig"
get "$fn.minisig" -- "$f.minisig" || die

will verify file integrity of "$fn"
minisign -QVm "$fn" -P "$pub" || die

will clean up the signature file
rm -- "$fn.minisig" || die

will determine basic file type
x4="$(hex "$fn")" || die
x2="${x4%????}"
if [ "$x4" = 7f454c46 ] || [ "$x2" = 2321 ] || [ "$x2" = 4d5a ]
then
will set executable permission
chmod +x -- "$fn" || die
fi

done

will return files to original directory
find . -type f -exec mv -- {} "$owd/" \; || die

will remove temporary directory # assuming it's now emptied
cd -- "$owd" && rmdir -- "$t" || die

trap - INT EXIT
}

grab()(__grab "$@")
[ -n "${preload+-}" ] || __grab "$@"
