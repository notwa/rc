#!/usr/bin/env sh

__bylen_python() (
    argc $# -eq 0 bylen
    exec python3 -c 'import sys; sys.stdout.writelines(sorted(sys.stdin, key=len))'
)

__bylen_perl() (
    argc $# -eq 0 bylen
    exec perl -e 'print sort { length($a) <=> length($b) } <>'
)

__bylen_pure() (
    argc $# -eq 0 bylen
    export LC_ALL=C

    hi=0
    while read -r line; do
        len=${#line} L=_${len}_
        : $(($L += 1)) $((hi=hi>len?hi:len))
        eval $L$(($L))=\$line
    done

    len=0
    while [ $len -le $hi ]; do
        j=0 L=_${len}_ size=$(($L))
        while [ $j != $size ]; do
            : $((j += 1))
            eval line=\$$L$j
            printf %s\\n "$line"
        done
        : $((len += 1))
    done
)

bylen() { ### @- sort lines by length. several implementations are provided.
    if has python3; then
        bylen() { __bylen_python "$@"; }
    elif has perl; then
        bylen() { __bylen_perl "$@"; }
    else
        bylen() { __bylen_pure "$@"; }
    fi
    unset REPLY # from `has`
    bylen "$@"
}

[ -n "${preload+-}" ] || . ~/sh/preload || exit 2
eval ${preload:-preload} argc has
[ -n "${preload+-}" ] || bylen "$@"
